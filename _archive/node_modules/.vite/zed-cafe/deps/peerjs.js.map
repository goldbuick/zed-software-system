{
  "version": 3,
  "sources": ["../../../peerjs-js-binarypack/lib/bufferbuilder.js", "../../../peerjs-js-binarypack/lib/binarypack.js", "../../../sdp/sdp.js", "../../../rtcpeerconnection-shim/rtcpeerconnection.js", "../../../webrtc-adapter/src/js/utils.js", "../../../webrtc-adapter/src/js/chrome/chrome_shim.js", "../../../webrtc-adapter/src/js/chrome/getusermedia.js", "../../../webrtc-adapter/src/js/chrome/getdisplaymedia.js", "../../../webrtc-adapter/src/js/edge/edge_shim.js", "../../../webrtc-adapter/src/js/edge/filtericeservers.js", "../../../webrtc-adapter/src/js/edge/getusermedia.js", "../../../webrtc-adapter/src/js/edge/getdisplaymedia.js", "../../../webrtc-adapter/src/js/firefox/firefox_shim.js", "../../../webrtc-adapter/src/js/firefox/getusermedia.js", "../../../webrtc-adapter/src/js/firefox/getdisplaymedia.js", "../../../webrtc-adapter/src/js/safari/safari_shim.js", "../../../webrtc-adapter/src/js/common_shim.js", "../../../webrtc-adapter/src/js/adapter_factory.js", "../../../webrtc-adapter/src/js/adapter_core.js", "../../../peerjs/dist/lib/exports.ts", "../../../peerjs/dist/lib/util.ts", "../../../peerjs/dist/lib/supports.ts", "../../../peerjs/dist/lib/peer.ts", "../../../peerjs/dist/node_modules/eventemitter3/index.js", "../../../peerjs/dist/lib/logger.ts", "../../../peerjs/dist/lib/socket.ts", "../../../peerjs/dist/lib/enums.ts", "../../../peerjs/dist/package.json", "../../../peerjs/dist/lib/mediaconnection.ts", "../../../peerjs/dist/lib/negotiator.ts", "../../../peerjs/dist/lib/baseconnection.ts", "../../../peerjs/dist/lib/dataconnection.ts", "../../../peerjs/dist/lib/encodingQueue.ts", "../../../peerjs/dist/lib/api.ts"],
  "sourcesContent": ["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n", "var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n", "/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n", "/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      let urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n", "import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport type {\n\tPeerJSOption,\n\tPeerConnectOption,\n\tAnswerOption,\n\tCallOption,\n} from \"./optionInterfaces\";\nexport type { UtilSupportsObj } from \"./util\";\nexport type { DataConnection } from \"./dataconnection\";\nexport type { MediaConnection } from \"./mediaconnection\";\nexport type { LogLevel } from \"./logger\";\nexport type {\n\tConnectionType,\n\tPeerErrorType,\n\tSerializationType,\n\tSocketEventType,\n\tServerMessageType,\n} from \"./enums\";\n\nexport { Peer, util };\nexport default Peer;\n", "// Types aren’t accurate\n//@ts-ignore\nimport BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from \"./supports\";\n\nexport interface UtilSupportsObj {\n\tbrowser: boolean;\n\twebRTC: boolean;\n\taudioVideo: boolean;\n\tdata: boolean;\n\tbinaryBlob: boolean;\n\treliable: boolean;\n}\n\nconst DEFAULT_CONFIG = {\n\ticeServers: [\n\t\t{ urls: \"stun:stun.l.google.com:19302\" },\n\t\t{\n\t\t\turls: [\n\t\t\t\t\"turn:eu-0.turn.peerjs.com:3478\",\n\t\t\t\t\"turn:us-0.turn.peerjs.com:3478\",\n\t\t\t],\n\t\t\tusername: \"peerjs\",\n\t\t\tcredential: \"peerjsp\",\n\t\t},\n\t],\n\tsdpSemantics: \"unified-plan\",\n};\n\nclass Util {\n\tnoop(): void {}\n\n\treadonly CLOUD_HOST = \"0.peerjs.com\";\n\treadonly CLOUD_PORT = 443;\n\n\t// Browsers that need chunking:\n\treadonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n\treadonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n\t// Returns browser-agnostic default config\n\treadonly defaultConfig = DEFAULT_CONFIG;\n\n\treadonly browser = Supports.getBrowser();\n\treadonly browserVersion = Supports.getVersion();\n\n\t// Lists which features are supported\n\treadonly supports = (function () {\n\t\tconst supported: UtilSupportsObj = {\n\t\t\tbrowser: Supports.isBrowserSupported(),\n\t\t\twebRTC: Supports.isWebRTCSupported(),\n\t\t\taudioVideo: false,\n\t\t\tdata: false,\n\t\t\tbinaryBlob: false,\n\t\t\treliable: false,\n\t\t};\n\n\t\tif (!supported.webRTC) return supported;\n\n\t\tlet pc: RTCPeerConnection;\n\n\t\ttry {\n\t\t\tpc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n\t\t\tsupported.audioVideo = true;\n\n\t\t\tlet dc: RTCDataChannel;\n\n\t\t\ttry {\n\t\t\t\tdc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n\t\t\t\tsupported.data = true;\n\t\t\t\tsupported.reliable = !!dc.ordered;\n\n\t\t\t\t// Binary test\n\t\t\t\ttry {\n\t\t\t\t\tdc.binaryType = \"blob\";\n\t\t\t\t\tsupported.binaryBlob = !Supports.isIOS;\n\t\t\t\t} catch (e) {}\n\t\t\t} catch (e) {\n\t\t\t} finally {\n\t\t\t\tif (dc) {\n\t\t\t\t\tdc.close();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (pc) {\n\t\t\t\tpc.close();\n\t\t\t}\n\t\t}\n\n\t\treturn supported;\n\t})();\n\n\t// Ensure alphanumeric ids\n\tvalidateId(id: string): boolean {\n\t\t// Allow empty ids\n\t\treturn !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n\t}\n\n\tpack = BinaryPack.pack;\n\tunpack = BinaryPack.unpack;\n\n\t// Binary stuff\n\n\tprivate _dataCount: number = 1;\n\n\tchunk(\n\t\tblob: Blob,\n\t): { __peerData: number; n: number; total: number; data: Blob }[] {\n\t\tconst chunks = [];\n\t\tconst size = blob.size;\n\t\tconst total = Math.ceil(size / util.chunkedMTU);\n\n\t\tlet index = 0;\n\t\tlet start = 0;\n\n\t\twhile (start < size) {\n\t\t\tconst end = Math.min(size, start + util.chunkedMTU);\n\t\t\tconst b = blob.slice(start, end);\n\n\t\t\tconst chunk = {\n\t\t\t\t__peerData: this._dataCount,\n\t\t\t\tn: index,\n\t\t\t\tdata: b,\n\t\t\t\ttotal,\n\t\t\t};\n\n\t\t\tchunks.push(chunk);\n\n\t\t\tstart = end;\n\t\t\tindex++;\n\t\t}\n\n\t\tthis._dataCount++;\n\n\t\treturn chunks;\n\t}\n\n\tblobToArrayBuffer(\n\t\tblob: Blob,\n\t\tcb: (arg: ArrayBuffer | null) => void,\n\t): FileReader {\n\t\tconst fr = new FileReader();\n\n\t\tfr.onload = function (evt) {\n\t\t\tif (evt.target) {\n\t\t\t\tcb(evt.target.result as ArrayBuffer);\n\t\t\t}\n\t\t};\n\n\t\tfr.readAsArrayBuffer(blob);\n\n\t\treturn fr;\n\t}\n\n\tbinaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n\t\tconst byteArray = new Uint8Array(binary.length);\n\n\t\tfor (let i = 0; i < binary.length; i++) {\n\t\t\tbyteArray[i] = binary.charCodeAt(i) & 0xff;\n\t\t}\n\n\t\treturn byteArray.buffer;\n\t}\n\n\trandomToken(): string {\n\t\treturn Math.random().toString(36).slice(2);\n\t}\n\n\tisSecure(): boolean {\n\t\treturn location.protocol === \"https:\";\n\t}\n}\nexport const util = new Util();\n", "import webRTCAdapter_import from \"webrtc-adapter\";\n\nconst webRTCAdapter: typeof webRTCAdapter_import =\n\t//@ts-ignore\n\twebRTCAdapter_import.default || webRTCAdapter_import;\n\nexport const Supports = new (class {\n\treadonly isIOS = [\"iPad\", \"iPhone\", \"iPod\"].includes(navigator.platform);\n\treadonly supportedBrowsers = [\"firefox\", \"chrome\", \"safari\"];\n\n\treadonly minFirefoxVersion = 59;\n\treadonly minChromeVersion = 72;\n\treadonly minSafariVersion = 605;\n\n\tisWebRTCSupported(): boolean {\n\t\treturn typeof RTCPeerConnection !== \"undefined\";\n\t}\n\n\tisBrowserSupported(): boolean {\n\t\tconst browser = this.getBrowser();\n\t\tconst version = this.getVersion();\n\n\t\tconst validBrowser = this.supportedBrowsers.includes(browser);\n\n\t\tif (!validBrowser) return false;\n\n\t\tif (browser === \"chrome\") return version >= this.minChromeVersion;\n\t\tif (browser === \"firefox\") return version >= this.minFirefoxVersion;\n\t\tif (browser === \"safari\")\n\t\t\treturn !this.isIOS && version >= this.minSafariVersion;\n\n\t\treturn false;\n\t}\n\n\tgetBrowser(): string {\n\t\treturn webRTCAdapter.browserDetails.browser;\n\t}\n\n\tgetVersion(): number {\n\t\treturn webRTCAdapter.browserDetails.version || 0;\n\t}\n\n\tisUnifiedPlanSupported(): boolean {\n\t\tconst browser = this.getBrowser();\n\t\tconst version = webRTCAdapter.browserDetails.version || 0;\n\n\t\tif (browser === \"chrome\" && version < this.minChromeVersion) return false;\n\t\tif (browser === \"firefox\" && version >= this.minFirefoxVersion) return true;\n\t\tif (\n\t\t\t!window.RTCRtpTransceiver ||\n\t\t\t!(\"currentDirection\" in RTCRtpTransceiver.prototype)\n\t\t)\n\t\t\treturn false;\n\n\t\tlet tempPc: RTCPeerConnection;\n\t\tlet supported = false;\n\n\t\ttry {\n\t\t\ttempPc = new RTCPeerConnection();\n\t\t\ttempPc.addTransceiver(\"audio\");\n\t\t\tsupported = true;\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (tempPc) {\n\t\t\t\ttempPc.close();\n\t\t\t}\n\t\t}\n\n\t\treturn supported;\n\t}\n\n\ttoString(): string {\n\t\treturn `Supports:\n    browser:${this.getBrowser()}\n    version:${this.getVersion()}\n    isIOS:${this.isIOS}\n    isWebRTCSupported:${this.isWebRTCSupported()}\n    isBrowserSupported:${this.isBrowserSupported()}\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n\t}\n})();\n", "import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n\tConnectionType,\n\tPeerErrorType,\n\tSocketEventType,\n\tServerMessageType,\n} from \"./enums\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport type {\n\tPeerConnectOption,\n\tPeerJSOption,\n\tCallOption,\n} from \"./optionInterfaces\";\n\nclass PeerOptions implements PeerJSOption {\n\tdebug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n\thost?: string;\n\tport?: number;\n\tpath?: string;\n\tkey?: string;\n\ttoken?: string;\n\tconfig?: any;\n\tsecure?: boolean;\n\tpingInterval?: number;\n\treferrerPolicy?: ReferrerPolicy;\n\tlogFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\ntype PeerEvents = {\n\t/**\n\t * Emitted when a connection to the PeerServer is established.\n\t */\n\topen: (id: string) => void;\n\t/**\n\t * Emitted when a new data connection is established from a remote peer.\n\t */\n\tconnection: (dataConnection: DataConnection) => void;\n\t/**\n\t * Emitted when a remote peer attempts to call you.\n\t */\n\tcall: (mediaConnection: MediaConnection) => void;\n\t/**\n\t * Emitted when the peer is destroyed and can no longer accept or create any new connections.\n\t */\n\tclose: () => void;\n\t/**\n\t * Emitted when the peer is disconnected from the signalling server\n\t */\n\tdisconnected: (currentId: string) => void;\n\t/**\n\t * Errors on the peer are almost always fatal and will destroy the peer.\n\t */\n\terror: (error: Error) => void;\n};\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter<PeerEvents> {\n\tprivate static readonly DEFAULT_KEY = \"peerjs\";\n\n\tprivate readonly _options: PeerOptions;\n\tprivate readonly _api: API;\n\tprivate readonly _socket: Socket;\n\n\tprivate _id: string | null = null;\n\tprivate _lastServerId: string | null = null;\n\n\t// States.\n\tprivate _destroyed = false; // Connections have been killed\n\tprivate _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n\tprivate _open = false; // Sockets and such are not yet open.\n\tprivate readonly _connections: Map<\n\t\tstring,\n\t\t(DataConnection | MediaConnection)[]\n\t> = new Map(); // All connections for this peer.\n\tprivate readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\t/**\n\t * The brokering ID of this peer\n\t */\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\tget socket() {\n\t\treturn this._socket;\n\t}\n\n\t/**\n\t * A hash of all connections associated with this peer, keyed by the remote peer's ID.\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */\n\tget connections(): Object {\n\t\tconst plainConnections = Object.create(null);\n\n\t\tfor (let [k, v] of this._connections) {\n\t\t\tplainConnections[k] = v;\n\t\t}\n\n\t\treturn plainConnections;\n\t}\n\n\t/**\n\t * true if this peer and all of its connections can no longer be used.\n\t */\n\tget destroyed() {\n\t\treturn this._destroyed;\n\t}\n\t/**\n\t * false if there is an active connection to the PeerServer.\n\t */\n\tget disconnected() {\n\t\treturn this._disconnected;\n\t}\n\n\t/**\n\t * A peer can connect to other peers and listen for connections.\n\t */\n\tconstructor();\n\n\t/**\n\t * A peer can connect to other peers and listen for connections.\n\t * @param options for specifying details about PeerServer\n\t */\n\tconstructor(options: PeerOptions);\n\n\t/**\n\t * A peer can connect to other peers and listen for connections.\n\t * @param id Other peers can connect to this peer using the provided ID.\n\t *     If no ID is given, one will be generated by the brokering server.\n\t * @param options for specifying details about PeerServer\n\t */\n\tconstructor(id: string, options?: PeerOptions);\n\n\tconstructor(id?: string | PeerOptions, options?: PeerOptions) {\n\t\tsuper();\n\n\t\tlet userId: string | undefined;\n\n\t\t// Deal with overloading\n\t\tif (id && id.constructor == Object) {\n\t\t\toptions = id as PeerOptions;\n\t\t} else if (id) {\n\t\t\tuserId = id.toString();\n\t\t}\n\n\t\t// Configurize options\n\t\toptions = {\n\t\t\tdebug: 0, // 1: Errors, 2: Warnings, 3: All logs\n\t\t\thost: util.CLOUD_HOST,\n\t\t\tport: util.CLOUD_PORT,\n\t\t\tpath: \"/\",\n\t\t\tkey: Peer.DEFAULT_KEY,\n\t\t\ttoken: util.randomToken(),\n\t\t\tconfig: util.defaultConfig,\n\t\t\treferrerPolicy: \"strict-origin-when-cross-origin\",\n\t\t\t...options,\n\t\t};\n\t\tthis._options = options;\n\n\t\t// Detect relative URL host.\n\t\tif (this._options.host === \"/\") {\n\t\t\tthis._options.host = window.location.hostname;\n\t\t}\n\n\t\t// Set path correctly.\n\t\tif (this._options.path) {\n\t\t\tif (this._options.path[0] !== \"/\") {\n\t\t\t\tthis._options.path = \"/\" + this._options.path;\n\t\t\t}\n\t\t\tif (this._options.path[this._options.path.length - 1] !== \"/\") {\n\t\t\t\tthis._options.path += \"/\";\n\t\t\t}\n\t\t}\n\n\t\t// Set whether we use SSL to same as current host\n\t\tif (\n\t\t\tthis._options.secure === undefined &&\n\t\t\tthis._options.host !== util.CLOUD_HOST\n\t\t) {\n\t\t\tthis._options.secure = util.isSecure();\n\t\t} else if (this._options.host == util.CLOUD_HOST) {\n\t\t\tthis._options.secure = true;\n\t\t}\n\t\t// Set a custom log function if present\n\t\tif (this._options.logFunction) {\n\t\t\tlogger.setLogFunction(this._options.logFunction);\n\t\t}\n\n\t\tlogger.logLevel = this._options.debug || 0;\n\n\t\tthis._api = new API(options);\n\t\tthis._socket = this._createServerConnection();\n\n\t\t// Sanity checks\n\t\t// Ensure WebRTC supported\n\t\tif (!util.supports.audioVideo && !util.supports.data) {\n\t\t\tthis._delayedAbort(\n\t\t\t\tPeerErrorType.BrowserIncompatible,\n\t\t\t\t\"The current browser does not support WebRTC\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure alphanumeric id\n\t\tif (!!userId && !util.validateId(userId)) {\n\t\t\tthis._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis._initialize(userId);\n\t\t} else {\n\t\t\tthis._api\n\t\t\t\t.retrieveId()\n\t\t\t\t.then((id) => this._initialize(id))\n\t\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t\t}\n\t}\n\n\tprivate _createServerConnection(): Socket {\n\t\tconst socket = new Socket(\n\t\t\tthis._options.secure,\n\t\t\tthis._options.host!,\n\t\t\tthis._options.port!,\n\t\t\tthis._options.path!,\n\t\t\tthis._options.key!,\n\t\t\tthis._options.pingInterval,\n\t\t);\n\n\t\tsocket.on(SocketEventType.Message, (data: ServerMessage) => {\n\t\t\tthis._handleMessage(data);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Error, (error: string) => {\n\t\t\tthis._abort(PeerErrorType.SocketError, error);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Disconnected, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tsocket.on(SocketEventType.Close, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._abort(\n\t\t\t\tPeerErrorType.SocketClosed,\n\t\t\t\t\"Underlying socket is already closed.\",\n\t\t\t);\n\t\t});\n\n\t\treturn socket;\n\t}\n\n\t/** Initialize a connection with the server. */\n\tprivate _initialize(id: string): void {\n\t\tthis._id = id;\n\t\tthis.socket.start(id, this._options.token!);\n\t}\n\n\t/** Handles messages from the server. */\n\tprivate _handleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\t\tconst peerId = message.src;\n\n\t\tswitch (type) {\n\t\t\tcase ServerMessageType.Open: // The connection to the server is open.\n\t\t\t\tthis._lastServerId = this.id;\n\t\t\t\tthis._open = true;\n\t\t\t\tthis.emit(\"open\", this.id);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Error: // Server error.\n\t\t\t\tthis._abort(PeerErrorType.ServerError, payload.msg);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.IdTaken: // The selected ID is taken.\n\t\t\t\tthis._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.InvalidKey: // The given API key cannot be found.\n\t\t\t\tthis._abort(\n\t\t\t\t\tPeerErrorType.InvalidKey,\n\t\t\t\t\t`API KEY \"${this._options.key}\" is invalid`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n\t\t\t\tlogger.log(`Received leave message from ${peerId}`);\n\t\t\t\tthis._cleanupPeer(peerId);\n\t\t\t\tthis._connections.delete(peerId);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n\t\t\t\tthis.emitError(\n\t\t\t\t\tPeerErrorType.PeerUnavailable,\n\t\t\t\t\t`Could not connect to peer ${peerId}`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Offer: {\n\t\t\t\t// we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tlet connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection) {\n\t\t\t\t\tconnection.close();\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`Offer received for existing Connection ID:${connectionId}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Create a new connection.\n\t\t\t\tif (payload.type === ConnectionType.Media) {\n\t\t\t\t\tconst mediaConnection = new MediaConnection(peerId, this, {\n\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t});\n\t\t\t\t\tconnection = mediaConnection;\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(\"call\", mediaConnection);\n\t\t\t\t} else if (payload.type === ConnectionType.Data) {\n\t\t\t\t\tconst dataConnection = new DataConnection(peerId, this, {\n\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t\tlabel: payload.label,\n\t\t\t\t\t\tserialization: payload.serialization,\n\t\t\t\t\t\treliable: payload.reliable,\n\t\t\t\t\t});\n\t\t\t\t\tconnection = dataConnection;\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(\"connection\", dataConnection);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(`Received malformed connection type:${payload.type}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Find messages.\n\t\t\t\tconst messages = this._getMessages(connectionId);\n\t\t\t\tfor (let message of messages) {\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (!payload) {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`You received a malformed message from ${peerId} of type ${type}`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tconst connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection && connection.peerConnection) {\n\t\t\t\t\t// Pass it on.\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t} else if (connectionId) {\n\t\t\t\t\t// Store for possible later use\n\t\t\t\t\tthis._storeMessage(connectionId, message);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\"You received an unrecognized message:\", message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Stores messages without a set up connection, to be claimed later. */\n\tprivate _storeMessage(connectionId: string, message: ServerMessage): void {\n\t\tif (!this._lostMessages.has(connectionId)) {\n\t\t\tthis._lostMessages.set(connectionId, []);\n\t\t}\n\n\t\tthis._lostMessages.get(connectionId).push(message);\n\t}\n\n\t/** Retrieve messages from lost message store */\n\t//TODO Change it to private\n\tpublic _getMessages(connectionId: string): ServerMessage[] {\n\t\tconst messages = this._lostMessages.get(connectionId);\n\n\t\tif (messages) {\n\t\t\tthis._lostMessages.delete(connectionId);\n\t\t\treturn messages;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Connects to the remote peer specified by id and returns a data connection.\n\t * @param peer The brokering ID of the remote peer (their peer.id).\n\t * @param options for specifying details about Peer Connection\n\t */\n\tconnect(peer: string, options: PeerConnectOption = {}): DataConnection {\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect, or call reconnect \" +\n\t\t\t\t\t\"on this peer if you believe its ID to still be available.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataConnection = new DataConnection(peer, this, options);\n\t\tthis._addConnection(peer, dataConnection);\n\t\treturn dataConnection;\n\t}\n\n\t/**\n\t * Calls the remote peer specified by id and returns a media connection.\n\t * @param peer The brokering ID of the remote peer (their peer.id).\n\t * @param stream The caller's media stream\n\t * @param options Metadata associated with the connection, passed in by whoever initiated the connection.\n\t */\n\tcall(\n\t\tpeer: string,\n\t\tstream: MediaStream,\n\t\toptions: CallOption = {},\n\t): MediaConnection {\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!stream) {\n\t\t\tlogger.error(\n\t\t\t\t\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst mediaConnection = new MediaConnection(peer, this, {\n\t\t\t...options,\n\t\t\t_stream: stream,\n\t\t});\n\t\tthis._addConnection(peer, mediaConnection);\n\t\treturn mediaConnection;\n\t}\n\n\t/** Add a data/media connection to this peer. */\n\tprivate _addConnection(\n\t\tpeerId: string,\n\t\tconnection: MediaConnection | DataConnection,\n\t): void {\n\t\tlogger.log(\n\t\t\t`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`,\n\t\t);\n\n\t\tif (!this._connections.has(peerId)) {\n\t\t\tthis._connections.set(peerId, []);\n\t\t}\n\t\tthis._connections.get(peerId).push(connection);\n\t}\n\n\t//TODO should be private\n\t_removeConnection(connection: DataConnection | MediaConnection): void {\n\t\tconst connections = this._connections.get(connection.peer);\n\n\t\tif (connections) {\n\t\t\tconst index = connections.indexOf(connection);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tconnections.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t//remove from lost messages\n\t\tthis._lostMessages.delete(connection.connectionId);\n\t}\n\n\t/** Retrieve a data/media connection for this peer. */\n\tgetConnection(\n\t\tpeerId: string,\n\t\tconnectionId: string,\n\t): null | DataConnection | MediaConnection {\n\t\tconst connections = this._connections.get(peerId);\n\t\tif (!connections) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let connection of connections) {\n\t\t\tif (connection.connectionId === connectionId) {\n\t\t\t\treturn connection;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _delayedAbort(type: PeerErrorType, message: string | Error): void {\n\t\tsetTimeout(() => {\n\t\t\tthis._abort(type, message);\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */\n\tprivate _abort(type: PeerErrorType, message: string | Error): void {\n\t\tlogger.error(\"Aborting!\");\n\n\t\tthis.emitError(type, message);\n\n\t\tif (!this._lastServerId) {\n\t\t\tthis.destroy();\n\t\t} else {\n\t\t\tthis.disconnect();\n\t\t}\n\t}\n\n\t/** Emits a typed error message. */\n\temitError(type: PeerErrorType, err: string | Error): void {\n\t\tlogger.error(\"Error:\", err);\n\n\t\tlet error: Error & { type?: PeerErrorType };\n\n\t\tif (typeof err === \"string\") {\n\t\t\terror = new Error(err);\n\t\t} else {\n\t\t\terror = err as Error;\n\t\t}\n\n\t\terror.type = type;\n\n\t\tthis.emit(\"error\", error);\n\t}\n\n\t/**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t *  to the server.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  destroyed.\n\t */\n\tdestroy(): void {\n\t\tif (this.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.log(`Destroy peer with ID:${this.id}`);\n\n\t\tthis.disconnect();\n\t\tthis._cleanup();\n\n\t\tthis._destroyed = true;\n\n\t\tthis.emit(\"close\");\n\t}\n\n\t/** Disconnects every connection on this peer. */\n\tprivate _cleanup(): void {\n\t\tfor (let peerId of this._connections.keys()) {\n\t\t\tthis._cleanupPeer(peerId);\n\t\t\tthis._connections.delete(peerId);\n\t\t}\n\n\t\tthis.socket.removeAllListeners();\n\t}\n\n\t/** Closes all connections to this peer. */\n\tprivate _cleanupPeer(peerId: string): void {\n\t\tconst connections = this._connections.get(peerId);\n\n\t\tif (!connections) return;\n\n\t\tfor (let connection of connections) {\n\t\t\tconnection.close();\n\t\t}\n\t}\n\n\t/**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */\n\tdisconnect(): void {\n\t\tif (this.disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentId = this.id;\n\n\t\tlogger.log(`Disconnect peer with ID:${currentId}`);\n\n\t\tthis._disconnected = true;\n\t\tthis._open = false;\n\n\t\tthis.socket.close();\n\n\t\tthis._lastServerId = currentId;\n\t\tthis._id = null;\n\n\t\tthis.emit(\"disconnected\", currentId);\n\t}\n\n\t/** Attempts to reconnect with the same ID. */\n\treconnect(): void {\n\t\tif (this.disconnected && !this.destroyed) {\n\t\t\tlogger.log(\n\t\t\t\t`Attempting reconnection to server with ID ${this._lastServerId}`,\n\t\t\t);\n\t\t\tthis._disconnected = false;\n\t\t\tthis._initialize(this._lastServerId!);\n\t\t} else if (this.destroyed) {\n\t\t\tthrow new Error(\n\t\t\t\t\"This peer cannot reconnect to the server. It has already been destroyed.\",\n\t\t\t);\n\t\t} else if (!this.disconnected && !this.open) {\n\t\t\t// Do nothing. We're still connecting the first time.\n\t\t\tlogger.error(\n\t\t\t\t\"In a hurry? We're still trying to make the initial connection!\",\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */\n\tlistAllPeers(cb = (_: any[]) => {}): void {\n\t\tthis._api\n\t\t\t.listAllPeers()\n\t\t\t.then((peers) => cb(peers))\n\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t}\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "const LOG_PREFIX = \"PeerJS: \";\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n\tDisabled,\n\tErrors,\n\tWarnings,\n\tAll,\n}\n\nclass Logger {\n\tprivate _logLevel = LogLevel.Disabled;\n\n\tget logLevel(): LogLevel {\n\t\treturn this._logLevel;\n\t}\n\n\tset logLevel(logLevel: LogLevel) {\n\t\tthis._logLevel = logLevel;\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.All) {\n\t\t\tthis._print(LogLevel.All, ...args);\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Warnings) {\n\t\t\tthis._print(LogLevel.Warnings, ...args);\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Errors) {\n\t\t\tthis._print(LogLevel.Errors, ...args);\n\t\t}\n\t}\n\n\tsetLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n\t\tthis._print = fn;\n\t}\n\n\tprivate _print(logLevel: LogLevel, ...rest: any[]): void {\n\t\tconst copy = [LOG_PREFIX, ...rest];\n\n\t\tfor (let i in copy) {\n\t\t\tif (copy[i] instanceof Error) {\n\t\t\t\tcopy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\t\t\t}\n\t\t}\n\n\t\tif (logLevel >= LogLevel.All) {\n\t\t\tconsole.log(...copy);\n\t\t} else if (logLevel >= LogLevel.Warnings) {\n\t\t\tconsole.warn(\"WARNING\", ...copy);\n\t\t} else if (logLevel >= LogLevel.Errors) {\n\t\t\tconsole.error(\"ERROR\", ...copy);\n\t\t}\n\t}\n}\n\nexport default new Logger();\n", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\nimport { version } from \"../package.json\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n\tprivate _disconnected: boolean = true;\n\tprivate _id?: string;\n\tprivate _messagesQueue: Array<object> = [];\n\tprivate _socket?: WebSocket;\n\tprivate _wsPingTimer?: any;\n\tprivate readonly _baseUrl: string;\n\n\tconstructor(\n\t\tsecure: any,\n\t\thost: string,\n\t\tport: number,\n\t\tpath: string,\n\t\tkey: string,\n\t\tprivate readonly pingInterval: number = 5000,\n\t) {\n\t\tsuper();\n\n\t\tconst wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n\t\tthis._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n\t}\n\n\tstart(id: string, token: string): void {\n\t\tthis._id = id;\n\n\t\tconst wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n\t\tif (!!this._socket || !this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._socket = new WebSocket(wsUrl + \"&version=\" + version);\n\t\tthis._disconnected = false;\n\n\t\tthis._socket.onmessage = (event) => {\n\t\t\tlet data;\n\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(event.data);\n\t\t\t\tlogger.log(\"Server message received:\", data);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.log(\"Invalid server message\", event.data);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emit(SocketEventType.Message, data);\n\t\t};\n\n\t\tthis._socket.onclose = (event) => {\n\t\t\tif (this._disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.log(\"Socket closed.\", event);\n\n\t\t\tthis._cleanup();\n\t\t\tthis._disconnected = true;\n\n\t\t\tthis.emit(SocketEventType.Disconnected);\n\t\t};\n\n\t\t// Take care of the queue of connections if necessary and make sure Peer knows\n\t\t// socket is open.\n\t\tthis._socket.onopen = () => {\n\t\t\tif (this._disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._sendQueuedMessages();\n\n\t\t\tlogger.log(\"Socket open\");\n\n\t\t\tthis._scheduleHeartbeat();\n\t\t};\n\t}\n\n\tprivate _scheduleHeartbeat(): void {\n\t\tthis._wsPingTimer = setTimeout(() => {\n\t\t\tthis._sendHeartbeat();\n\t\t}, this.pingInterval);\n\t}\n\n\tprivate _sendHeartbeat(): void {\n\t\tif (!this._wsOpen()) {\n\t\t\tlogger.log(`Cannot send heartbeat, because socket closed`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n\t\tthis._socket!.send(message);\n\n\t\tthis._scheduleHeartbeat();\n\t}\n\n\t/** Is the websocket currently open? */\n\tprivate _wsOpen(): boolean {\n\t\treturn !!this._socket && this._socket.readyState === 1;\n\t}\n\n\t/** Send queued messages. */\n\tprivate _sendQueuedMessages(): void {\n\t\t//Create copy of queue and clear it,\n\t\t//because send method push the message back to queue if smth will go wrong\n\t\tconst copiedQueue = [...this._messagesQueue];\n\t\tthis._messagesQueue = [];\n\n\t\tfor (const message of copiedQueue) {\n\t\t\tthis.send(message);\n\t\t}\n\t}\n\n\t/** Exposed send for DC & Peer. */\n\tsend(data: any): void {\n\t\tif (this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we didn't get an ID yet, we can't yet send anything so we should queue\n\t\t// up these messages.\n\t\tif (!this._id) {\n\t\t\tthis._messagesQueue.push(data);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!data.type) {\n\t\t\tthis.emit(SocketEventType.Error, \"Invalid message\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._wsOpen()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify(data);\n\n\t\tthis._socket!.send(message);\n\t}\n\n\tclose(): void {\n\t\tif (this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cleanup();\n\n\t\tthis._disconnected = true;\n\t}\n\n\tprivate _cleanup(): void {\n\t\tif (this._socket) {\n\t\t\tthis._socket.onopen =\n\t\t\t\tthis._socket.onmessage =\n\t\t\t\tthis._socket.onclose =\n\t\t\t\t\tnull;\n\t\t\tthis._socket.close();\n\t\t\tthis._socket = undefined;\n\t\t}\n\n\t\tclearTimeout(this._wsPingTimer!);\n\t}\n}\n", "export enum ConnectionType {\n\tData = \"data\",\n\tMedia = \"media\",\n}\n\nexport enum PeerErrorType {\n\tBrowserIncompatible = \"browser-incompatible\",\n\tDisconnected = \"disconnected\",\n\tInvalidID = \"invalid-id\",\n\tInvalidKey = \"invalid-key\",\n\tNetwork = \"network\",\n\tPeerUnavailable = \"peer-unavailable\",\n\tSslUnavailable = \"ssl-unavailable\",\n\tServerError = \"server-error\",\n\tSocketError = \"socket-error\",\n\tSocketClosed = \"socket-closed\",\n\tUnavailableID = \"unavailable-id\",\n\tWebRTC = \"webrtc\",\n}\n\nexport enum SerializationType {\n\tBinary = \"binary\",\n\tBinaryUTF8 = \"binary-utf8\",\n\tJSON = \"json\",\n}\n\nexport enum SocketEventType {\n\tMessage = \"message\",\n\tDisconnected = \"disconnected\",\n\tError = \"error\",\n\tClose = \"close\",\n}\n\nexport enum ServerMessageType {\n\tHeartbeat = \"HEARTBEAT\",\n\tCandidate = \"CANDIDATE\",\n\tOffer = \"OFFER\",\n\tAnswer = \"ANSWER\",\n\tOpen = \"OPEN\", // The connection to the server is open.\n\tError = \"ERROR\", // Server error.\n\tIdTaken = \"ID-TAKEN\", // The selected ID is taken.\n\tInvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n\tLeave = \"LEAVE\", // Another peer has closed its connection to this peer.\n\tExpire = \"EXPIRE\", // The offer sent to a peer has expired without response.\n}\n", "{\n\t\"name\": \"peerjs\",\n\t\"version\": \"1.4.7\",\n\t\"keywords\": [\n\t\t\"peerjs\",\n\t\t\"webrtc\",\n\t\t\"p2p\",\n\t\t\"rtc\"\n\t],\n\t\"description\": \"PeerJS client\",\n\t\"homepage\": \"https://peerjs.com\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/peers/peerjs/issues\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/peers/peerjs\"\n\t},\n\t\"license\": \"MIT\",\n\t\"contributors\": [\n\t\t\"Michelle Bu <michelle@michellebu.com>\",\n\t\t\"afrokick <devbyru@gmail.com>\",\n\t\t\"ericz <really.ez@gmail.com>\",\n\t\t\"Jairo <kidandcat@gmail.com>\",\n\t\t\"Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>\",\n\t\t\"Jairo Caro-Accino Viciana <jairo@galax.be>\",\n\t\t\"Carlos Caballero <carlos.caballero.gonzalez@gmail.com>\",\n\t\t\"hc <hheennrryy@gmail.com>\",\n\t\t\"Muhammad Asif <capripio@gmail.com>\",\n\t\t\"PrashoonB <prashoonbhattacharjee@gmail.com>\",\n\t\t\"Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>\",\n\t\t\"akotynski <aleksanderkotbury@gmail.com>\",\n\t\t\"lmb <i@lmb.io>\",\n\t\t\"Jairooo <jairocaro@msn.com>\",\n\t\t\"Moritz Stückler <moritz.stueckler@gmail.com>\",\n\t\t\"Simon <crydotsnakegithub@gmail.com>\",\n\t\t\"Denis Lukov <denismassters@gmail.com>\",\n\t\t\"Philipp Hancke <fippo@andyet.net>\",\n\t\t\"Hans Oksendahl <hansoksendahl@gmail.com>\",\n\t\t\"Jess <jessachandler@gmail.com>\",\n\t\t\"khankuan <khankuan@gmail.com>\",\n\t\t\"DUODVK <kurmanov.work@gmail.com>\",\n\t\t\"XiZhao <kwang1imsa@gmail.com>\",\n\t\t\"Matthias Lohr <matthias@lohr.me>\",\n\t\t\"=frank tree <=frnktrb@googlemail.com>\",\n\t\t\"Andre Eckardt <aeckardt@outlook.com>\",\n\t\t\"Chris Cowan <agentme49@gmail.com>\",\n\t\t\"Alex Chuev <alex@chuev.com>\",\n\t\t\"alxnull <alxnull@e.mail.de>\",\n\t\t\"Yemel Jardi <angel.jardi@gmail.com>\",\n\t\t\"Ben Parnell <benjaminparnell.94@gmail.com>\",\n\t\t\"Benny Lichtner <bennlich@gmail.com>\",\n\t\t\"fresheneesz <bitetrudpublic@gmail.com>\",\n\t\t\"bob.barstead@exaptive.com <bob.barstead@exaptive.com>\",\n\t\t\"chandika <chandika@gmail.com>\",\n\t\t\"emersion <contact@emersion.fr>\",\n\t\t\"Christopher Van <cvan@users.noreply.github.com>\",\n\t\t\"eddieherm <edhermoso@gmail.com>\",\n\t\t\"Eduardo Pinho <enet4mikeenet@gmail.com>\",\n\t\t\"Evandro Zanatta <ezanatta@tray.net.br>\",\n\t\t\"Gardner Bickford <gardner@users.noreply.github.com>\",\n\t\t\"Gian Luca <gianluca.cecchi@cynny.com>\",\n\t\t\"PatrickJS <github@gdi2290.com>\",\n\t\t\"jonnyf <github@jonathanfoss.co.uk>\",\n\t\t\"Hizkia Felix <hizkifw@gmail.com>\",\n\t\t\"Hristo Oskov <hristo.oskov@gmail.com>\",\n\t\t\"Isaac Madwed <i.madwed@gmail.com>\",\n\t\t\"Ilya Konanykhin <ilya.konanykhin@gmail.com>\",\n\t\t\"jasonbarry <jasbarry@me.com>\",\n\t\t\"Jonathan Burke <jonathan.burke.1311@googlemail.com>\",\n\t\t\"Josh Hamit <josh.hamit@gmail.com>\",\n\t\t\"Jordan Austin <jrax86@gmail.com>\",\n\t\t\"Joel Wetzell <jwetzell@yahoo.com>\",\n\t\t\"xizhao <kevin.wang@cloudera.com>\",\n\t\t\"Alberto Torres <kungfoobar@gmail.com>\",\n\t\t\"Jonathan Mayol <mayoljonathan@gmail.com>\",\n\t\t\"Jefferson Felix <me@jsfelix.dev>\",\n\t\t\"Rolf Erik Lekang <me@rolflekang.com>\",\n\t\t\"Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>\",\n\t\t\"Pepijn de Vos <pepijndevos@gmail.com>\",\n\t\t\"JooYoung <qkdlql@naver.com>\",\n\t\t\"Tobias Speicher <rootcommander@gmail.com>\",\n\t\t\"Steve Blaurock <sblaurock@gmail.com>\",\n\t\t\"Kyrylo Shegeda <shegeda@ualberta.ca>\",\n\t\t\"Diwank Singh Tomer <singh@diwank.name>\",\n\t\t\"Sören Balko <Soeren.Balko@gmail.com>\",\n\t\t\"Arpit Solanki <solankiarpit1997@gmail.com>\",\n\t\t\"Yuki Ito <yuki@gnnk.net>\",\n\t\t\"Artur Zayats <zag2art@gmail.com>\"\n\t],\n\t\"funding\": {\n\t\t\"type\": \"opencollective\",\n\t\t\"url\": \"https://opencollective.com/peer\"\n\t},\n\t\"collective\": {\n\t\t\"type\": \"opencollective\",\n\t\t\"url\": \"https://opencollective.com/peer\"\n\t},\n\t\"files\": [\n\t\t\"dist/*\"\n\t],\n\t\"sideEffects\": [\n\t\t\"lib/global.ts\",\n\t\t\"lib/supports.ts\"\n\t],\n\t\"main\": \"dist/bundler.cjs\",\n\t\"module\": \"dist/bundler.mjs\",\n\t\"browser-minified\": \"dist/peerjs.min.js\",\n\t\"browser-unminified\": \"dist/peerjs.js\",\n\t\"types\": \"dist/types.d.ts\",\n\t\"engines\": {\n\t\t\"node\": \">= 10\"\n\t},\n\t\"targets\": {\n\t\t\"types\": {\n\t\t\t\"source\": \"lib/exports.ts\"\n\t\t},\n\t\t\"main\": {\n\t\t\t\"source\": \"lib/exports.ts\",\n\t\t\t\"sourceMap\": {\n\t\t\t\t\"inlineSources\": true\n\t\t\t}\n\t\t},\n\t\t\"module\": {\n\t\t\t\"source\": \"lib/exports.ts\",\n\t\t\t\"includeNodeModules\": [\n\t\t\t\t\"eventemitter3\"\n\t\t\t],\n\t\t\t\"sourceMap\": {\n\t\t\t\t\"inlineSources\": true\n\t\t\t}\n\t\t},\n\t\t\"browser-minified\": {\n\t\t\t\"context\": \"browser\",\n\t\t\t\"outputFormat\": \"global\",\n\t\t\t\"optimize\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"cover 99%, not dead\"\n\t\t\t},\n\t\t\t\"source\": \"lib/global.ts\"\n\t\t},\n\t\t\"browser-unminified\": {\n\t\t\t\"context\": \"browser\",\n\t\t\t\"outputFormat\": \"global\",\n\t\t\t\"optimize\": false,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"cover 99%, not dead\"\n\t\t\t},\n\t\t\t\"source\": \"lib/global.ts\"\n\t\t}\n\t},\n\t\"scripts\": {\n\t\t\"contributors\": \"git-authors-cli --print=false && prettier --write package.json && git add package.json package-lock.json && git commit -m \\\"chore(contributors): update and sort contributors list\\\"\",\n\t\t\"check\": \"tsc --noEmit\",\n\t\t\"watch\": \"parcel watch\",\n\t\t\"build\": \"rm -rf dist && parcel build\",\n\t\t\"prepublishOnly\": \"npm run build\",\n\t\t\"test\": \"mocha -r ts-node/register -r jsdom-global/register test/**/*.ts\",\n\t\t\"format\": \"prettier --write .\",\n\t\t\"semantic-release\": \"semantic-release\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@parcel/config-default\": \"^2.5.0\",\n\t\t\"@parcel/packager-ts\": \"^2.5.0\",\n\t\t\"@parcel/transformer-typescript-tsc\": \"^2.5.0\",\n\t\t\"@parcel/transformer-typescript-types\": \"^2.5.0\",\n\t\t\"@semantic-release/changelog\": \"^6.0.1\",\n\t\t\"@semantic-release/git\": \"^10.0.1\",\n\t\t\"@types/chai\": \"^4.3.0\",\n\t\t\"@types/mocha\": \"^9.1.0\",\n\t\t\"@types/node\": \"^17.0.18\",\n\t\t\"chai\": \"^4.3.6\",\n\t\t\"git-authors-cli\": \"^1.0.40\",\n\t\t\"jsdom\": \"^19.0.0\",\n\t\t\"jsdom-global\": \"^3.0.2\",\n\t\t\"mocha\": \"^9.2.0\",\n\t\t\"mock-socket\": \"8.0.5\",\n\t\t\"parcel\": \"^2.5.0\",\n\t\t\"parcel-transformer-tsc-sourcemaps\": \"^1.0.2\",\n\t\t\"prettier\": \"^2.6.2\",\n\t\t\"semantic-release\": \"^19.0.2\",\n\t\t\"standard\": \"^16.0.4\",\n\t\t\"ts-node\": \"^10.5.0\",\n\t\t\"typescript\": \"^4.5.5\"\n\t},\n\t\"dependencies\": {\n\t\t\"@swc/helpers\": \"^0.3.13\",\n\t\t\"eventemitter3\": \"^4.0.7\",\n\t\t\"peerjs-js-binarypack\": \"1.0.1\",\n\t\t\"webrtc-adapter\": \"^7.7.1\"\n\t}\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport type { AnswerOption } from \"./optionInterfaces\";\n\ntype MediaConnectionEvents = {\n\t/**\n\t * Emitted when a connection to the PeerServer is established.\n\t */\n\tstream: (stream: MediaStream) => void;\n};\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection<MediaConnectionEvents> {\n\tprivate static readonly ID_PREFIX = \"mc_\";\n\n\tprivate _negotiator: Negotiator<MediaConnectionEvents, MediaConnection>;\n\tprivate _localStream: MediaStream;\n\tprivate _remoteStream: MediaStream;\n\n\tget type() {\n\t\treturn ConnectionType.Media;\n\t}\n\n\tget localStream(): MediaStream {\n\t\treturn this._localStream;\n\t}\n\tget remoteStream(): MediaStream {\n\t\treturn this._remoteStream;\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis._localStream = this.options._stream;\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId ||\n\t\t\tMediaConnection.ID_PREFIX + util.randomToken();\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tif (this._localStream) {\n\t\t\tthis._negotiator.startConnection({\n\t\t\t\t_stream: this._localStream,\n\t\t\t\toriginator: true,\n\t\t\t});\n\t\t}\n\t}\n\n\taddStream(remoteStream) {\n\t\tlogger.log(\"Receiving stream\", remoteStream);\n\n\t\tthis._remoteStream = remoteStream;\n\t\tsuper.emit(\"stream\", remoteStream); // Should we call this `open`?\n\t}\n\n\thandleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\t// Forward to negotiator\n\t\t\t\tthis._negotiator.handleSDP(type, payload.sdp);\n\t\t\t\tthis._open = true;\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tthis._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tanswer(stream?: MediaStream, options: AnswerOption = {}): void {\n\t\tif (this._localStream) {\n\t\t\tlogger.warn(\n\t\t\t\t\"Local stream already exists on this MediaConnection. Are you answering a call twice?\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._localStream = stream;\n\n\t\tif (options && options.sdpTransform) {\n\t\t\tthis.options.sdpTransform = options.sdpTransform;\n\t\t}\n\n\t\tthis._negotiator.startConnection({\n\t\t\t...this.options._payload,\n\t\t\t_stream: stream,\n\t\t});\n\t\t// Retrieve lost messages stored because PeerConnection not set up.\n\t\tconst messages = this.provider._getMessages(this.connectionId);\n\n\t\tfor (let message of messages) {\n\t\t\tthis.handleMessage(message);\n\t\t}\n\n\t\tthis._open = true;\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/** Allows user to close connection. */\n\tclose(): void {\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tthis._localStream = null;\n\t\tthis._remoteStream = null;\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.options && this.options._stream) {\n\t\t\tthis.options._stream = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(\"close\");\n\t}\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ServerMessageType } from \"./enums\";\nimport { BaseConnection, BaseConnectionEvents } from \"./baseconnection\";\nimport { ValidEventTypes } from \"eventemitter3\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator<\n\tA extends ValidEventTypes,\n\tT extends BaseConnection<A | BaseConnectionEvents>,\n> {\n\tconstructor(readonly connection: T) {}\n\n\t/** Returns a PeerConnection object set up correctly (for data, media). */\n\tstartConnection(options: any) {\n\t\tconst peerConnection = this._startPeerConnection();\n\n\t\t// Set the connection's PC.\n\t\tthis.connection.peerConnection = peerConnection;\n\n\t\tif (this.connection.type === ConnectionType.Media && options._stream) {\n\t\t\tthis._addTracksToConnection(options._stream, peerConnection);\n\t\t}\n\n\t\t// What do we need to do now?\n\t\tif (options.originator) {\n\t\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\t\tconst dataConnection = <DataConnection>(<unknown>this.connection);\n\n\t\t\t\tconst config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n\t\t\t\tconst dataChannel = peerConnection.createDataChannel(\n\t\t\t\t\tdataConnection.label,\n\t\t\t\t\tconfig,\n\t\t\t\t);\n\t\t\t\tdataConnection.initialize(dataChannel);\n\t\t\t}\n\n\t\t\tthis._makeOffer();\n\t\t} else {\n\t\t\tthis.handleSDP(\"OFFER\", options.sdp);\n\t\t}\n\t}\n\n\t/** Start a PC. */\n\tprivate _startPeerConnection(): RTCPeerConnection {\n\t\tlogger.log(\"Creating RTCPeerConnection.\");\n\n\t\tconst peerConnection = new RTCPeerConnection(\n\t\t\tthis.connection.provider.options.config,\n\t\t);\n\n\t\tthis._setupListeners(peerConnection);\n\n\t\treturn peerConnection;\n\t}\n\n\t/** Set up various WebRTC listeners. */\n\tprivate _setupListeners(peerConnection: RTCPeerConnection) {\n\t\tconst peerId = this.connection.peer;\n\t\tconst connectionId = this.connection.connectionId;\n\t\tconst connectionType = this.connection.type;\n\t\tconst provider = this.connection.provider;\n\n\t\t// ICE CANDIDATES.\n\t\tlogger.log(\"Listening for ICE candidates.\");\n\n\t\tpeerConnection.onicecandidate = (evt) => {\n\t\t\tif (!evt.candidate || !evt.candidate.candidate) return;\n\n\t\t\tlogger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n\t\t\tprovider.socket.send({\n\t\t\t\ttype: ServerMessageType.Candidate,\n\t\t\t\tpayload: {\n\t\t\t\t\tcandidate: evt.candidate,\n\t\t\t\t\ttype: connectionType,\n\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t},\n\t\t\t\tdst: peerId,\n\t\t\t});\n\t\t};\n\n\t\tpeerConnection.oniceconnectionstatechange = () => {\n\t\t\tswitch (peerConnection.iceConnectionState) {\n\t\t\t\tcase \"failed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is failed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emit(\n\t\t\t\t\t\t\"error\",\n\t\t\t\t\t\tnew Error(\"Negotiation of connection to \" + peerId + \" failed.\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"closed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is closed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emit(\n\t\t\t\t\t\t\"error\",\n\t\t\t\t\t\tnew Error(\"Connection to \" + peerId + \" closed.\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disconnected\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState changed to disconnected on the connection with \" +\n\t\t\t\t\t\t\tpeerId,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"completed\":\n\t\t\t\t\tpeerConnection.onicecandidate = util.noop;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.connection.emit(\n\t\t\t\t\"iceStateChanged\",\n\t\t\t\tpeerConnection.iceConnectionState,\n\t\t\t);\n\t\t};\n\n\t\t// DATACONNECTION.\n\t\tlogger.log(\"Listening for data channel\");\n\t\t// Fired between offer and answer, so options should already be saved\n\t\t// in the options hash.\n\t\tpeerConnection.ondatachannel = (evt) => {\n\t\t\tlogger.log(\"Received data channel\");\n\n\t\t\tconst dataChannel = evt.channel;\n\t\t\tconst connection = <DataConnection>(\n\t\t\t\tprovider.getConnection(peerId, connectionId)\n\t\t\t);\n\n\t\t\tconnection.initialize(dataChannel);\n\t\t};\n\n\t\t// MEDIACONNECTION.\n\t\tlogger.log(\"Listening for remote stream\");\n\n\t\tpeerConnection.ontrack = (evt) => {\n\t\t\tlogger.log(\"Received remote stream\");\n\n\t\t\tconst stream = evt.streams[0];\n\t\t\tconst connection = provider.getConnection(peerId, connectionId);\n\n\t\t\tif (connection.type === ConnectionType.Media) {\n\t\t\t\tconst mediaConnection = <MediaConnection>connection;\n\n\t\t\t\tthis._addStreamToMediaConnection(stream, mediaConnection);\n\t\t\t}\n\t\t};\n\t}\n\n\tcleanup(): void {\n\t\tlogger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n\t\tconst peerConnection = this.connection.peerConnection;\n\n\t\tif (!peerConnection) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.connection.peerConnection = null;\n\n\t\t//unsubscribe from all PeerConnection's events\n\t\tpeerConnection.onicecandidate =\n\t\t\tpeerConnection.oniceconnectionstatechange =\n\t\t\tpeerConnection.ondatachannel =\n\t\t\tpeerConnection.ontrack =\n\t\t\t\t() => {};\n\n\t\tconst peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n\t\tlet dataChannelNotClosed = false;\n\n\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\tconst dataConnection = <DataConnection>(<unknown>this.connection);\n\t\t\tconst dataChannel = dataConnection.dataChannel;\n\n\t\t\tif (dataChannel) {\n\t\t\t\tdataChannelNotClosed =\n\t\t\t\t\t!!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n\t\t\t}\n\t\t}\n\n\t\tif (peerConnectionNotClosed || dataChannelNotClosed) {\n\t\t\tpeerConnection.close();\n\t\t}\n\t}\n\n\tprivate async _makeOffer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst offer = await peerConnection.createOffer(\n\t\t\t\tthis.connection.options.constraints,\n\t\t\t);\n\n\t\t\tlogger.log(\"Created offer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\toffer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(offer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t\"Set localDescription:\",\n\t\t\t\t\toffer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tlet payload: any = {\n\t\t\t\t\tsdp: offer,\n\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\tmetadata: this.connection.metadata,\n\t\t\t\t\tbrowser: util.browser,\n\t\t\t\t};\n\n\t\t\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\t\t\tconst dataConnection = <DataConnection>(<unknown>this.connection);\n\n\t\t\t\t\tpayload = {\n\t\t\t\t\t\t...payload,\n\t\t\t\t\t\tlabel: dataConnection.label,\n\t\t\t\t\t\treliable: dataConnection.reliable,\n\t\t\t\t\t\tserialization: dataConnection.serialization,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Offer,\n\t\t\t\t\tpayload,\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\t// TODO: investigate why _makeOffer is being called from the answer\n\t\t\t\tif (\n\t\t\t\t\terr !=\n\t\t\t\t\t\"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n\t\t\t\t) {\n\t\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to createOffer, \", err_1);\n\t\t}\n\t}\n\n\tprivate async _makeAnswer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst answer = await peerConnection.createAnswer();\n\t\t\tlogger.log(\"Created answer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\tanswer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(answer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t`Set localDescription:`,\n\t\t\t\t\tanswer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Answer,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tsdp: answer,\n\t\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\t\tbrowser: util.browser,\n\t\t\t\t\t},\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to create answer, \", err_1);\n\t\t}\n\t}\n\n\t/** Handle an SDP. */\n\tasync handleSDP(type: string, sdp: any): Promise<void> {\n\t\tsdp = new RTCSessionDescription(sdp);\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\tlogger.log(\"Setting remote description\", sdp);\n\n\t\tconst self = this;\n\n\t\ttry {\n\t\t\tawait peerConnection.setRemoteDescription(sdp);\n\t\t\tlogger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n\t\t\tif (type === \"OFFER\") {\n\t\t\t\tawait self._makeAnswer();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to setRemoteDescription, \", err);\n\t\t}\n\t}\n\n\t/** Handle a candidate. */\n\tasync handleCandidate(ice: any): Promise<void> {\n\t\tlogger.log(`handleCandidate:`, ice);\n\n\t\tconst candidate = ice.candidate;\n\t\tconst sdpMLineIndex = ice.sdpMLineIndex;\n\t\tconst sdpMid = ice.sdpMid;\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tawait peerConnection.addIceCandidate(\n\t\t\t\tnew RTCIceCandidate({\n\t\t\t\t\tsdpMid: sdpMid,\n\t\t\t\t\tsdpMLineIndex: sdpMLineIndex,\n\t\t\t\t\tcandidate: candidate,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tlogger.log(`Added ICE candidate for:${this.connection.peer}`);\n\t\t} catch (err) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to handleCandidate, \", err);\n\t\t}\n\t}\n\n\tprivate _addTracksToConnection(\n\t\tstream: MediaStream,\n\t\tpeerConnection: RTCPeerConnection,\n\t): void {\n\t\tlogger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n\t\tif (!peerConnection.addTrack) {\n\t\t\treturn logger.error(\n\t\t\t\t`Your browser does't support RTCPeerConnection#addTrack. Ignored.`,\n\t\t\t);\n\t\t}\n\n\t\tstream.getTracks().forEach((track) => {\n\t\t\tpeerConnection.addTrack(track, stream);\n\t\t});\n\t}\n\n\tprivate _addStreamToMediaConnection(\n\t\tstream: MediaStream,\n\t\tmediaConnection: MediaConnection,\n\t): void {\n\t\tlogger.log(\n\t\t\t`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`,\n\t\t);\n\n\t\tmediaConnection.addStream(stream);\n\t}\n}\n", "import { EventEmitter, ValidEventTypes } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport type BaseConnectionEvents = {\n\t/**\n\t * Emitted when either you or the remote peer closes the connection.\n\t */\n\tclose: () => void;\n\terror: (error: Error) => void;\n\ticeStateChanged: (state: RTCIceConnectionState) => void;\n};\n\nexport abstract class BaseConnection<\n\tT extends ValidEventTypes,\n> extends EventEmitter<T & BaseConnectionEvents> {\n\tprotected _open = false;\n\n\treadonly metadata: any;\n\tconnectionId: string;\n\n\tpeerConnection: RTCPeerConnection;\n\n\tabstract get type(): ConnectionType;\n\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\tconstructor(\n\t\treadonly peer: string,\n\t\tpublic provider: Peer,\n\t\treadonly options: any,\n\t) {\n\t\tsuper();\n\n\t\tthis.metadata = options.metadata;\n\t}\n\n\tabstract close(): void;\n\n\tabstract handleMessage(message: ServerMessage): void;\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, SerializationType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from \"./encodingQueue\";\nimport type { DataConnection as IDataConnection } from \"./dataconnection\";\n\ntype DataConnectionEvents = {\n\t/**\n\t * Emitted when data is received from the remote peer.\n\t */\n\tdata: (data: unknown) => void;\n\t/**\n\t * Emitted when the connection is established and ready-to-use.\n\t */\n\topen: () => void;\n};\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection\n\textends BaseConnection<DataConnectionEvents>\n\timplements IDataConnection\n{\n\tprivate static readonly ID_PREFIX = \"dc_\";\n\tprivate static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n\tprivate _negotiator: Negotiator<DataConnectionEvents, DataConnection>;\n\treadonly label: string;\n\treadonly serialization: SerializationType;\n\treadonly reliable: boolean;\n\tstringify: (data: any) => string = JSON.stringify;\n\tparse: (data: string) => any = JSON.parse;\n\n\tget type() {\n\t\treturn ConnectionType.Data;\n\t}\n\n\tprivate _buffer: any[] = [];\n\tprivate _bufferSize = 0;\n\tprivate _buffering = false;\n\tprivate _chunkedData: {\n\t\t[id: number]: {\n\t\t\tdata: Blob[];\n\t\t\tcount: number;\n\t\t\ttotal: number;\n\t\t};\n\t} = {};\n\n\tprivate _dc: RTCDataChannel;\n\tprivate _encodingQueue = new EncodingQueue();\n\n\tget dataChannel(): RTCDataChannel {\n\t\treturn this._dc;\n\t}\n\n\tget bufferSize(): number {\n\t\treturn this._bufferSize;\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId ||\n\t\t\tDataConnection.ID_PREFIX + util.randomToken();\n\n\t\tthis.label = this.options.label || this.connectionId;\n\t\tthis.serialization = this.options.serialization || SerializationType.Binary;\n\t\tthis.reliable = !!this.options.reliable;\n\n\t\tthis._encodingQueue.on(\"done\", (ab: ArrayBuffer) => {\n\t\t\tthis._bufferedSend(ab);\n\t\t});\n\n\t\tthis._encodingQueue.on(\"error\", () => {\n\t\t\tlogger.error(\n\t\t\t\t`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`,\n\t\t\t);\n\t\t\tthis.close();\n\t\t});\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tthis._negotiator.startConnection(\n\t\t\tthis.options._payload || {\n\t\t\t\toriginator: true,\n\t\t\t},\n\t\t);\n\t}\n\n\t/** Called by the Negotiator when the DataChannel is ready. */\n\tinitialize(dc: RTCDataChannel): void {\n\t\tthis._dc = dc;\n\t\tthis._configureDataChannel();\n\t}\n\n\tprivate _configureDataChannel(): void {\n\t\tif (!util.supports.binaryBlob || util.supports.reliable) {\n\t\t\tthis.dataChannel.binaryType = \"arraybuffer\";\n\t\t}\n\n\t\tthis.dataChannel.onopen = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc connection success`);\n\t\t\tthis._open = true;\n\t\t\tthis.emit(\"open\");\n\t\t};\n\n\t\tthis.dataChannel.onmessage = (e) => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n\t\t\tthis._handleDataMessage(e);\n\t\t};\n\n\t\tthis.dataChannel.onclose = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n\t\t\tthis.close();\n\t\t};\n\t}\n\n\t// Handles a DataChannel message.\n\tprivate _handleDataMessage({\n\t\tdata,\n\t}: {\n\t\tdata: Blob | ArrayBuffer | string;\n\t}): void {\n\t\tconst datatype = data.constructor;\n\n\t\tconst isBinarySerialization =\n\t\t\tthis.serialization === SerializationType.Binary ||\n\t\t\tthis.serialization === SerializationType.BinaryUTF8;\n\n\t\tlet deserializedData: any = data;\n\n\t\tif (isBinarySerialization) {\n\t\t\tif (datatype === Blob) {\n\t\t\t\t// Datatype should never be blob\n\t\t\t\tutil.blobToArrayBuffer(data as Blob, (ab) => {\n\t\t\t\t\tconst unpackedData = util.unpack(ab);\n\t\t\t\t\tthis.emit(\"data\", unpackedData);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (datatype === ArrayBuffer) {\n\t\t\t\tdeserializedData = util.unpack(data as ArrayBuffer);\n\t\t\t} else if (datatype === String) {\n\t\t\t\t// String fallback for binary data for browsers that don't support binary yet\n\t\t\t\tconst ab = util.binaryStringToArrayBuffer(data as string);\n\t\t\t\tdeserializedData = util.unpack(ab);\n\t\t\t}\n\t\t} else if (this.serialization === SerializationType.JSON) {\n\t\t\tdeserializedData = this.parse(data as string);\n\t\t}\n\n\t\t// Check if we've chunked--if so, piece things back together.\n\t\t// We're guaranteed that this isn't 0.\n\t\tif (deserializedData.__peerData) {\n\t\t\tthis._handleChunk(deserializedData);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.emit(\"data\", deserializedData);\n\t}\n\n\tprivate _handleChunk(data: {\n\t\t__peerData: number;\n\t\tn: number;\n\t\ttotal: number;\n\t\tdata: Blob;\n\t}): void {\n\t\tconst id = data.__peerData;\n\t\tconst chunkInfo = this._chunkedData[id] || {\n\t\t\tdata: [],\n\t\t\tcount: 0,\n\t\t\ttotal: data.total,\n\t\t};\n\n\t\tchunkInfo.data[data.n] = data.data;\n\t\tchunkInfo.count++;\n\t\tthis._chunkedData[id] = chunkInfo;\n\n\t\tif (chunkInfo.total === chunkInfo.count) {\n\t\t\t// Clean up before making the recursive call to `_handleDataMessage`.\n\t\t\tdelete this._chunkedData[id];\n\n\t\t\t// We've received all the chunks--time to construct the complete data.\n\t\t\tconst data = new Blob(chunkInfo.data);\n\t\t\tthis._handleDataMessage({ data });\n\t\t}\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/** Allows user to close connection. */\n\tclose(): void {\n\t\tthis._buffer = [];\n\t\tthis._bufferSize = 0;\n\t\tthis._chunkedData = {};\n\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.dataChannel) {\n\t\t\tthis.dataChannel.onopen = null;\n\t\t\tthis.dataChannel.onmessage = null;\n\t\t\tthis.dataChannel.onclose = null;\n\t\t\tthis._dc = null;\n\t\t}\n\n\t\tif (this._encodingQueue) {\n\t\t\tthis._encodingQueue.destroy();\n\t\t\tthis._encodingQueue.removeAllListeners();\n\t\t\tthis._encodingQueue = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(\"close\");\n\t}\n\n\t/** Allows user to send data. */\n\tsend(data: any, chunked?: boolean): void {\n\t\tif (!this.open) {\n\t\t\tsuper.emit(\n\t\t\t\t\"error\",\n\t\t\t\tnew Error(\n\t\t\t\t\t\"Connection is not open. You should listen for the `open` event before sending messages.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.serialization === SerializationType.JSON) {\n\t\t\tthis._bufferedSend(this.stringify(data));\n\t\t} else if (\n\t\t\tthis.serialization === SerializationType.Binary ||\n\t\t\tthis.serialization === SerializationType.BinaryUTF8\n\t\t) {\n\t\t\tconst blob = util.pack(data);\n\n\t\t\tif (!chunked && blob.size > util.chunkedMTU) {\n\t\t\t\tthis._sendChunks(blob);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!util.supports.binaryBlob) {\n\t\t\t\t// We only do this if we really need to (e.g. blobs are not supported),\n\t\t\t\t// because this conversion is costly.\n\t\t\t\tthis._encodingQueue.enque(blob);\n\t\t\t} else {\n\t\t\t\tthis._bufferedSend(blob);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedSend(data);\n\t\t}\n\t}\n\n\tprivate _bufferedSend(msg: any): void {\n\t\tif (this._buffering || !this._trySend(msg)) {\n\t\t\tthis._buffer.push(msg);\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t}\n\t}\n\n\t// Returns true if the send succeeds.\n\tprivate _trySend(msg: any): boolean {\n\t\tif (!this.open) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n\t\t\tthis._buffering = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._buffering = false;\n\t\t\t\tthis._tryBuffer();\n\t\t\t}, 50);\n\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.dataChannel.send(msg);\n\t\t} catch (e) {\n\t\t\tlogger.error(`DC#:${this.connectionId} Error when sending:`, e);\n\t\t\tthis._buffering = true;\n\n\t\t\tthis.close();\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Try to send the first message in the buffer.\n\tprivate _tryBuffer(): void {\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._buffer.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msg = this._buffer[0];\n\n\t\tif (this._trySend(msg)) {\n\t\t\tthis._buffer.shift();\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t\tthis._tryBuffer();\n\t\t}\n\t}\n\n\tprivate _sendChunks(blob: Blob): void {\n\t\tconst blobs = util.chunk(blob);\n\t\tlogger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n\t\tfor (let blob of blobs) {\n\t\t\tthis.send(blob, true);\n\t\t}\n\t}\n\n\thandleMessage(message: ServerMessage): void {\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\tthis._negotiator.handleSDP(message.type, payload.sdp);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tthis._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\n\t\t\t\t\t\"Unrecognized message type:\",\n\t\t\t\t\tmessage.type,\n\t\t\t\t\t\"from peer:\",\n\t\t\t\t\tthis.peer,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n\treadonly fileReader: FileReader = new FileReader();\n\n\tprivate _queue: Blob[] = [];\n\tprivate _processing: boolean = false;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.fileReader.onload = (evt) => {\n\t\t\tthis._processing = false;\n\n\t\t\tif (evt.target) {\n\t\t\t\tthis.emit(\"done\", evt.target.result as ArrayBuffer);\n\t\t\t}\n\n\t\t\tthis.doNextTask();\n\t\t};\n\n\t\tthis.fileReader.onerror = (evt) => {\n\t\t\tlogger.error(`EncodingQueue error:`, evt);\n\t\t\tthis._processing = false;\n\t\t\tthis.destroy();\n\t\t\tthis.emit(\"error\", evt);\n\t\t};\n\t}\n\n\tget queue(): Blob[] {\n\t\treturn this._queue;\n\t}\n\n\tget size(): number {\n\t\treturn this.queue.length;\n\t}\n\n\tget processing(): boolean {\n\t\treturn this._processing;\n\t}\n\n\tenque(blob: Blob): void {\n\t\tthis.queue.push(blob);\n\n\t\tif (this.processing) return;\n\n\t\tthis.doNextTask();\n\t}\n\n\tdestroy(): void {\n\t\tthis.fileReader.abort();\n\t\tthis._queue = [];\n\t}\n\n\tprivate doNextTask(): void {\n\t\tif (this.size === 0) return;\n\t\tif (this.processing) return;\n\n\t\tthis._processing = true;\n\n\t\tthis.fileReader.readAsArrayBuffer(this.queue.shift());\n\t}\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { PeerJSOption } from \"./optionInterfaces\";\nimport { version } from \"../package.json\";\n\nexport class API {\n\tconstructor(private readonly _options: PeerJSOption) {}\n\n\tprivate _buildRequest(method: string): Promise<Response> {\n\t\tconst protocol = this._options.secure ? \"https\" : \"http\";\n\t\tconst { host, port, path, key } = this._options;\n\t\tconst url = new URL(`${protocol}://${host}:${port}${path}${key}/${method}`);\n\t\t// TODO: Why timestamp, why random?\n\t\turl.searchParams.set(\"ts\", `${Date.now()}${Math.random()}`);\n\t\turl.searchParams.set(\"version\", version);\n\t\treturn fetch(url.href, {\n\t\t\treferrerPolicy: this._options.referrerPolicy,\n\t\t});\n\t}\n\n\t/** Get a unique ID from the server via XHR and initialize with it. */\n\tasync retrieveId(): Promise<string> {\n\t\ttry {\n\t\t\tconst response = await this._buildRequest(\"id\");\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.text();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving ID\", error);\n\n\t\t\tlet pathError = \"\";\n\n\t\t\tif (\n\t\t\t\tthis._options.path === \"/\" &&\n\t\t\t\tthis._options.host !== util.CLOUD_HOST\n\t\t\t) {\n\t\t\t\tpathError =\n\t\t\t\t\t\" If you passed in a `path` to your self-hosted PeerServer, \" +\n\t\t\t\t\t\"you'll also need to pass in that same path when creating a new \" +\n\t\t\t\t\t\"Peer.\";\n\t\t\t}\n\n\t\t\tthrow new Error(\"Could not get an ID from the server.\" + pathError);\n\t\t}\n\t}\n\n\t/** @deprecated */\n\tasync listAllPeers(): Promise<any[]> {\n\t\ttry {\n\t\t\tconst response = await this._buildRequest(\"peers\");\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tif (response.status === 401) {\n\t\t\t\t\tlet helpfulError = \"\";\n\n\t\t\t\t\tif (this._options.host === util.CLOUD_HOST) {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"It looks like you're using the cloud server. You can email \" +\n\t\t\t\t\t\t\t\"team@peerjs.com to enable peer listing for your API key.\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"You need to enable `allow_discovery` on your self-hosted \" +\n\t\t\t\t\t\t\t\"PeerServer to use this feature.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"It doesn't look like you have permission to list peers IDs. \" +\n\t\t\t\t\t\t\thelpfulError,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.json();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving list peers\", error);\n\n\t\t\tthrow new Error(\"Could not get list peers from the server.\" + error);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["SDPUtils", "SDPUtils", "filterIceServers", "window", "RTCPeerConnection", "window", "navigator", "window", "navigator", "window", "window", "shimGetDisplayMedia", "shimGetUserMedia", "shimPeerConnection", "shimGetUserMedia", "window", "navigator", "shimGetDisplayMedia", "window", "shimPeerConnection", "window", "RTCIceCandidate", "RTCSessionDescription", "shimRTCPeerConnection", "RTCPeerConnection", "shimGetDisplayMedia", "shimGetUserMedia", "shimOnTrack", "shimPeerConnection", "shimGetUserMedia", "window", "navigator", "shimGetDisplayMedia", "window", "shimOnTrack", "window", "shimPeerConnection", "shimGetUserMedia", "window", "shimGetUserMedia", "navigator", "RTCPeerConnection", "window", "RTCIceCandidate", "SDPUtils", "window", "logging", "adapter", "shimPeerConnection", "shimGetUserMedia", "shimOnTrack", "shimGetDisplayMedia", "$kKvpS$peerjsjsbinarypack", "once", "listeners", "$1615705ecc6adca3$export$243e62d78d3b544d", "$60fadef21a2daafc$export$3157d57b4135e3bc", "$60fadef21a2daafc$export$9547aaa2e39030ff", "$60fadef21a2daafc$export$89f507cf986a947", "$60fadef21a2daafc$export$3b5c4a4b6354f023", "$60fadef21a2daafc$export$adb4a1754da6f10d", "$31d11a8d122cb4b7$export$4798917dbf149b79", "$77f14d3e81888156$export$89e6bb5ad64bf4a", "$0b3b332fd86c5202$export$23a2a68283c24d80", "$353dee38f9ab557b$export$4a84e95a2324ac29", "$3014d862dcc9946b$export$c6913ae0ed687038", "$3356170d7bce7f20$export$d365f7ad9d7df9c9", "$9e85b3e1327369e6$export$2c4e825dc9120f87", "$26088d7da5b03f69$export$ecd1fc136c422448"]
}
