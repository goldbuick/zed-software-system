"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createFiles = void 0;
const devkit_1 = require("@nrwl/devkit");
const js_1 = require("@nrwl/js");
const create_ts_config_1 = require("../../../utils/create-ts-config");
function createFiles(host, options) {
    const relativePathToRootTsConfig = (0, js_1.getRelativePathToRootTsConfig)(host, options.projectRoot);
    const substitutions = Object.assign(Object.assign(Object.assign({}, options), (0, devkit_1.names)(options.name)), { tmpl: '', offsetFromRoot: (0, devkit_1.offsetFromRoot)(options.projectRoot) });
    (0, devkit_1.generateFiles)(host, (0, devkit_1.joinPathFragments)(__dirname, '../files/common'), options.projectRoot, substitutions);
    if (options.bundler === 'vite' || options.unitTestRunner === 'vitest') {
        (0, devkit_1.generateFiles)(host, (0, devkit_1.joinPathFragments)(__dirname, '../files/vite'), options.projectRoot, substitutions);
        if (host.exists((0, devkit_1.joinPathFragments)(options.projectRoot, '.babelrc'))) {
            host.delete((0, devkit_1.joinPathFragments)(options.projectRoot, '.babelrc'));
        }
    }
    if (!options.publishable && !options.buildable) {
        host.delete(`${options.projectRoot}/package.json`);
    }
    if (options.js) {
        (0, devkit_1.toJS)(host);
    }
    (0, create_ts_config_1.createTsConfig)(host, options.projectRoot, 'lib', options, relativePathToRootTsConfig);
}
exports.createFiles = createFiles;
//# sourceMappingURL=create-files.js.map