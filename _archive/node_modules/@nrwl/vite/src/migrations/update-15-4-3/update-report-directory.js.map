{"version":3,"sources":["../../../../../../packages/vite/src/migrations/update-15-4-3/update-report-directory.ts"],"sourcesContent":["import {\n  getProjects,\n  offsetFromRoot,\n  Tree,\n  updateProjectConfiguration,\n} from '@nrwl/devkit';\nimport { forEachExecutorOptions } from '@nrwl/workspace/src/utilities/executor-options-utils';\nimport { VitestExecutorOptions } from '../../executors/test/schema';\n\nexport function updateReportDirectoryPlaceholders(tree: Tree) {\n  const projects = getProjects(tree);\n  forEachExecutorOptions<VitestExecutorOptions>(\n    tree,\n    '@nrwl/vite:test',\n    (options, projectName, targetName, configName) => {\n      const projectConfig = projects.get(projectName);\n      const coverageOutput =\n        projectConfig.root === '.' ? projectName : projectConfig.root;\n\n      if (options.reportsDirectory) {\n        options.reportsDirectory = options.reportsDirectory\n          .replace(\n            '{workspaceRoot}/',\n            projectConfig.root === '.' ? '' : offsetFromRoot(projectConfig.root)\n          )\n          .replace('{projectRoot}', coverageOutput);\n        if (configName) {\n          projectConfig.targets[targetName].configurations[configName] =\n            options;\n        } else {\n          projectConfig.targets[targetName].options = options;\n        }\n        if (projectConfig.targets[targetName].outputs) {\n          projectConfig.targets[targetName].outputs = projectConfig.targets[\n            targetName\n          ].outputs.map((output) =>\n            output.replace(\n              '{projectRoot}/coverage',\n              `coverage/${coverageOutput}`\n            )\n          );\n        }\n        updateProjectConfiguration(tree, projectName, projectConfig);\n      }\n    }\n  );\n}\n\nexport default updateReportDirectoryPlaceholders;\n"],"names":["updateReportDirectoryPlaceholders","tree","projects","getProjects","forEachExecutorOptions","options","projectName","targetName","configName","projectConfig","get","coverageOutput","root","reportsDirectory","replace","offsetFromRoot","targets","configurations","outputs","map","output","updateProjectConfiguration"],"mappings":"AAAA;;;;;;;;IASgBA,iCAAiC,MAAjCA;IAuChB,OAAiD,MAAjD;;wBA3CO;sCACgC;AAGhC,SAASA,kCAAkCC,IAAU,EAAE;IAC5D,MAAMC,WAAWC,IAAAA,mBAAW,EAACF;IAC7BG,IAAAA,4CAAsB,EACpBH,MACA,mBACA,CAACI,SAASC,aAAaC,YAAYC,aAAe;QAChD,MAAMC,gBAAgBP,SAASQ,GAAG,CAACJ;QACnC,MAAMK,iBACJF,cAAcG,IAAI,KAAK,MAAMN,cAAcG,cAAcG,IAAI;QAE/D,IAAIP,QAAQQ,gBAAgB,EAAE;YAC5BR,QAAQQ,gBAAgB,GAAGR,QAAQQ,gBAAgB,CAChDC,OAAO,CACN,oBACAL,cAAcG,IAAI,KAAK,MAAM,KAAKG,IAAAA,sBAAc,EAACN,cAAcG,IAAI,CAAC,EAErEE,OAAO,CAAC,iBAAiBH;YAC5B,IAAIH,YAAY;gBACdC,cAAcO,OAAO,CAACT,WAAW,CAACU,cAAc,CAACT,WAAW,GAC1DH;YACJ,OAAO;gBACLI,cAAcO,OAAO,CAACT,WAAW,CAACF,OAAO,GAAGA;YAC9C,CAAC;YACD,IAAII,cAAcO,OAAO,CAACT,WAAW,CAACW,OAAO,EAAE;gBAC7CT,cAAcO,OAAO,CAACT,WAAW,CAACW,OAAO,GAAGT,cAAcO,OAAO,CAC/DT,WACD,CAACW,OAAO,CAACC,GAAG,CAAC,CAACC,SACbA,OAAON,OAAO,CACZ,0BACA,CAAC,SAAS,EAAEH,eAAe,CAAC;YAGlC,CAAC;YACDU,IAAAA,kCAA0B,EAACpB,MAAMK,aAAaG;QAChD,CAAC;IACH;AAEJ;MAEA,WAAeT"}