{"version":3,"sources":["../../../../../../packages/vite/src/migrations/update-15-3-4/set-mode-in-configuration.ts"],"sourcesContent":["import {\n  formatFiles,\n  readProjectConfiguration,\n  Tree,\n  updateProjectConfiguration,\n} from '@nrwl/devkit';\n\nimport { forEachExecutorOptions } from '@nrwl/workspace/src/utilities/executor-options-utils';\n\nexport async function setModeInConfiguration(tree: Tree) {\n  forAllProjectsUsingViteAddMode(tree);\n  await formatFiles(tree);\n}\n\nexport default setModeInConfiguration;\n\nfunction forAllProjectsUsingViteAddMode(tree: Tree): void {\n  forEachExecutorOptions(\n    tree,\n    '@nrwl/vite:build',\n    (_options, projectName, targetName, configuration) => {\n      if (!configuration) {\n        return;\n      }\n\n      const projectConfiguration = readProjectConfiguration(tree, projectName);\n      projectConfiguration.targets[targetName].configurations[\n        configuration\n      ].mode ??= configuration;\n\n      updateProjectConfiguration(tree, projectName, {\n        ...projectConfiguration,\n      });\n    }\n  );\n}\n"],"names":["setModeInConfiguration","projectConfiguration","tree","forAllProjectsUsingViteAddMode","formatFiles","forEachExecutorOptions","_options","projectName","targetName","configuration","readProjectConfiguration","targets","configurations","mode","updateProjectConfiguration"],"mappings":"AAAA;;;;;;;;IASsBA,sBAAsB,MAAtBA;IAKtB,OAAsC,MAAtC;;;wBATO;sCAEgC;IAmBjCC;AAjBC,eAAeD,uBAAuBE,IAAU,EAAE;IACvDC,+BAA+BD;IAC/B,MAAME,IAAAA,mBAAW,EAACF;AACpB;MAEA,WAAeF;AAEf,SAASG,+BAA+BD,IAAU,EAAQ;IACxDG,IAAAA,4CAAsB,EACpBH,MACA,oBACA,CAACI,UAAUC,aAAaC,YAAYC,gBAAkB;QACpD,IAAI,CAACA,eAAe;YAClB;QACF,CAAC;QAED,MAAMR,uBAAuBS,IAAAA,gCAAwB,EAACR,MAAMK;;QAC5DN,UAAAA,iBAAAA,qBAAqBU,OAAO,CAACH,WAAW,CAACI,cAAc,CACrDH,cACD,EAACI,wBAFFZ,eAEEY,OAASJ,aAAa;QAExBK,IAAAA,kCAA0B,EAACZ,MAAMK,aAAa,aACzCN;IAEP;AAEJ"}