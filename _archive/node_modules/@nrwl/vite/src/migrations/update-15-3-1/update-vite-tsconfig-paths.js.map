{"version":3,"sources":["../../../../../../packages/vite/src/migrations/update-15-3-1/update-vite-tsconfig-paths.ts"],"sourcesContent":["import {\n  applyChangesToString,\n  ChangeType,\n  formatFiles,\n  readProjectConfiguration,\n  Tree,\n} from '@nrwl/devkit';\n\nimport { forEachExecutorOptions } from '@nrwl/workspace/src/utilities/executor-options-utils';\nimport { tsquery } from '@phenomnomnominal/tsquery';\nimport { findNodes } from 'nx/src/utils/typescript';\nimport ts = require('typescript');\nimport { normalizeViteConfigFilePathWithTree } from '../../utils/generator-utils';\n\nexport async function removeProjectsFromViteTsConfigPaths(tree: Tree) {\n  findAllProjectsWithViteConfig(tree);\n  await formatFiles(tree);\n}\n\nexport default removeProjectsFromViteTsConfigPaths;\n\nfunction findAllProjectsWithViteConfig(tree: Tree): void {\n  forEachExecutorOptions(tree, '@nrwl/vite:build', (options, project) => {\n    const projectConfiguration = readProjectConfiguration(tree, project);\n    const viteConfig = normalizeViteConfigFilePathWithTree(\n      tree,\n      projectConfiguration.root,\n      options?.['configFile']\n    );\n    if (viteConfig) {\n      const appFileContent = tree.read(viteConfig, 'utf-8');\n      const file = tsquery.ast(appFileContent);\n      let newContents = appFileContent;\n      const defineConfig = tsquery.query(\n        file,\n        'CallExpression:has(Identifier[name=\"defineConfig\"])'\n      );\n      let startOfProjects, endOfProjects;\n\n      defineConfig?.[0]?.getChildren().forEach((defineConfigContentNode) => {\n        // Make sure it's the one we are looking for\n        // We cannot assume that it's called tsConfigPaths\n        // So make sure it includes `projects` and `root`\n        if (\n          defineConfigContentNode.getText().includes('projects') &&\n          defineConfigContentNode.getText().includes('root')\n        ) {\n          findNodes(defineConfigContentNode, [\n            ts.SyntaxKind.PropertyAssignment,\n          ]).forEach((nodePA) => {\n            if (nodePA.getText().startsWith('projects')) {\n              startOfProjects = nodePA.getStart();\n              endOfProjects = nodePA.getEnd();\n            }\n          });\n        }\n      });\n\n      if (startOfProjects && endOfProjects) {\n        newContents = applyChangesToString(newContents, [\n          {\n            type: ChangeType.Delete,\n            start: startOfProjects,\n            length: endOfProjects - startOfProjects + 1,\n          },\n        ]);\n        tree.write(viteConfig, newContents);\n      }\n    }\n  });\n}\n"],"names":["removeProjectsFromViteTsConfigPaths","ts","tree","findAllProjectsWithViteConfig","formatFiles","forEachExecutorOptions","options","project","projectConfiguration","readProjectConfiguration","viteConfig","normalizeViteConfigFilePathWithTree","root","defineConfig","appFileContent","read","file","tsquery","ast","newContents","query","startOfProjects","endOfProjects","getChildren","forEach","defineConfigContentNode","getText","includes","findNodes","SyntaxKind","PropertyAssignment","nodePA","startsWith","getStart","getEnd","applyChangesToString","type","ChangeType","Delete","start","length","write"],"mappings":"AAAA;;;;;;;;IAcsBA,mCAAmC,MAAnCA;IAKtB,OAAmD,MAAnD;;wBAbO;sCAEgC;yBACf;4BACE;gCAE0B;AADpD,MAAOC,aAAa;AAGb,eAAeD,oCAAoCE,IAAU,EAAE;IACpEC,8BAA8BD;IAC9B,MAAME,IAAAA,mBAAW,EAACF;AACpB;MAEA,WAAeF;AAEf,SAASG,8BAA8BD,IAAU,EAAQ;IACvDG,IAAAA,4CAAsB,EAACH,MAAM,oBAAoB,CAACI,SAASC,UAAY;QACrE,MAAMC,uBAAuBC,IAAAA,gCAAwB,EAACP,MAAMK;QAC5D,MAAMG,aAAaC,IAAAA,mDAAmC,EACpDT,MACAM,qBAAqBI,IAAI,EACzBN,kBAAAA,KAAAA,IAAAA,OAAS,CAAC,aAAa;QAEzB,IAAII,YAAY;gBAUdG;YATA,MAAMC,iBAAiBZ,KAAKa,IAAI,CAACL,YAAY;YAC7C,MAAMM,OAAOC,gBAAO,CAACC,GAAG,CAACJ;YACzB,IAAIK,cAAcL;YAClB,MAAMD,eAAeI,gBAAO,CAACG,KAAK,CAChCJ,MACA;YAEF,IAAIK,iBAAiBC;YAErBT,uBAAAA,KAAAA,IAAAA,CAAAA,MAAAA,YAAc,CAAC,EAAE,YAAjBA,KAAAA,IAAAA,IAAmBU,cAAcC,OAAO,CAAC,CAACC,0BAA4B;gBACpE,4CAA4C;gBAC5C,kDAAkD;gBAClD,iDAAiD;gBACjD,IACEA,wBAAwBC,OAAO,GAAGC,QAAQ,CAAC,eAC3CF,wBAAwBC,OAAO,GAAGC,QAAQ,CAAC,SAC3C;oBACAC,IAAAA,qBAAS,EAACH,yBAAyB;wBACjCxB,GAAG4B,UAAU,CAACC,kBAAkB;qBACjC,EAAEN,OAAO,CAAC,CAACO,SAAW;wBACrB,IAAIA,OAAOL,OAAO,GAAGM,UAAU,CAAC,aAAa;4BAC3CX,kBAAkBU,OAAOE,QAAQ;4BACjCX,gBAAgBS,OAAOG,MAAM;wBAC/B,CAAC;oBACH;gBACF,CAAC;YACH,EAAE;YAEF,IAAIb,mBAAmBC,eAAe;gBACpCH,cAAcgB,IAAAA,4BAAoB,EAAChB,aAAa;oBAC9C;wBACEiB,MAAMC,kBAAU,CAACC,MAAM;wBACvBC,OAAOlB;wBACPmB,QAAQlB,gBAAgBD,kBAAkB;oBAC5C;iBACD;gBACDnB,KAAKuC,KAAK,CAAC/B,YAAYS;YACzB,CAAC;QACH,CAAC;IACH;AACF"}