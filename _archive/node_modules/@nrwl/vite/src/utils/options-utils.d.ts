import { ExecutorContext } from '@nrwl/devkit';
import { BuildOptions, InlineConfig, PreviewOptions, ServerOptions } from 'vite';
import { ViteDevServerExecutorOptions } from '../executors/dev-server/schema';
import { VitePreviewServerExecutorOptions } from '../executors/preview-server/schema';
import { ViteBuildExecutorOptions } from '../executors/build/schema';
/**
 * Returns the path to the vite config file or undefined when not found.
 */
export declare function normalizeViteConfigFilePath(projectRoot: string, configFile?: string): string | undefined;
/**
 * Returns the path to the proxy configuration file or undefined when not found.
 */
export declare function getViteServerProxyConfigPath(nxProxyConfig: string | undefined, context: ExecutorContext): string | undefined;
/**
 * Builds the shared options for vite.
 *
 * Most shared options are derived from the build target.
 */
export declare function getViteSharedConfig(options: ViteBuildExecutorOptions, clearScreen: boolean | undefined, context: ExecutorContext): InlineConfig;
/**
 * Builds the options for the vite dev server.
 */
export declare function getViteServerOptions(options: ViteDevServerExecutorOptions, context: ExecutorContext): ServerOptions;
/**
 * Builds the build options for the vite.
 */
export declare function getViteBuildOptions(options: ViteBuildExecutorOptions, context: ExecutorContext): BuildOptions;
/**
 * Builds the options for the vite preview server.
 */
export declare function getVitePreviewOptions(options: VitePreviewServerExecutorOptions, context: ExecutorContext): PreviewOptions;
export declare function getNxTargetOptions(target: string, context: ExecutorContext): any;
