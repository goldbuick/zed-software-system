export declare const noBuildOptions = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import viteTsConfigPaths from 'vite-tsconfig-paths';\n\n    export default defineConfig({\n      plugins: [\n        react(),\n        viteTsConfigPaths({\n          root: '../../',\n        }),\n      ],\n\n      test: {\n        globals: true,\n        cache: {\n          dir: '../../node_modules/.vitest',\n        },\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n\n    });\n    ";
export declare const someBuildOptions = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import viteTsConfigPaths from 'vite-tsconfig-paths';\n\n    export default defineConfig({\n      plugins: [\n        react(),\n        viteTsConfigPaths({\n          root: '../../',\n        }),\n      ],\n\n      test: {\n        globals: true,\n        cache: {\n          dir: '../../node_modules/.vitest',\n        },\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n\n      build: {\n        my: 'option',\n      }\n\n    });\n    ";
export declare const noContentDefineConfig = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import viteTsConfigPaths from 'vite-tsconfig-paths';\n\n    export default defineConfig({});\n    ";
export declare const conditionalConfig = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    export default defineConfig(({ command, mode, ssrBuild }) => {\n      if (command === 'serve') {\n        return {\n          port: 4200,\n          host: 'localhost',\n        }\n      } else {\n        // command === 'build'\n        return {\n          my: 'option',\n        }\n      }\n    })\n    ";
export declare const configNoDefineConfig = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import viteTsConfigPaths from 'vite-tsconfig-paths';\n\n    export default {\n      plugins: [\n        react(),\n        viteTsConfigPaths({\n          root: '../../',\n        }),\n      ],\n    };\n    ";
export declare const noBuildOptionsHasTestOption = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import viteTsConfigPaths from 'vite-tsconfig-paths';\n\n    export default defineConfig({\n      plugins: [\n        react(),\n        viteTsConfigPaths({\n          root: '../../',\n        }),\n      ],\n\n      test: {\n        globals: true,\n        cache: {\n          dir: '../../node_modules/.vitest',\n        },\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n\n    });\n    ";
export declare const someBuildOptionsSomeTestOption = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import viteTsConfigPaths from 'vite-tsconfig-paths';\n\n    export default defineConfig({\n      plugins: [\n        react(),\n        viteTsConfigPaths({\n          root: '../../',\n        }),\n      ],\n\n      test: {\n        my: 'option',\n      },\n\n      build: {\n        my: 'option',\n      }\n\n    });\n    ";
export declare const hasEverything = "\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import viteTsConfigPaths from 'vite-tsconfig-paths';\n    import dts from 'vite-plugin-dts';\n    import { join } from 'path';\n\n    export default defineConfig({\n      plugins: [\n        dts({\n          entryRoot: 'src',\n          tsConfigFilePath: join(__dirname, 'tsconfig.lib.json'),\n          skipDiagnostics: true,\n        }),\n        react(),\n        viteTsConfigPaths({\n          root: '../../../',\n        }),\n      ],\n    \n      // Configuration for building your library.\n      // See: https://vitejs.dev/guide/build.html#library-mode\n      build: {\n        lib: {\n          // Could also be a dictionary or array of multiple entry points.\n          entry: 'src/index.ts',\n          name: 'pure-libs-react-vite',\n          fileName: 'index',\n          // Change this to the formats you want to support.\n          // Don't forgot to update your package.json as well.\n          formats: ['es', 'cjs'],\n        },\n        rollupOptions: {\n          // External packages that should not be bundled into your library.\n          external: ['react', 'react-dom', 'react/jsx-runtime'],\n        },\n      },\n    \n      test: {\n        globals: true,\n        cache: {\n          dir: '../../../node_modules/.vitest',\n        },\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n    });\n    ";
export declare const buildOption = "\n    // Configuration for building your library.\n    // See: https://vitejs.dev/guide/build.html#library-mode\n    build: {\n      lib: {\n        // Could also be a dictionary or array of multiple entry points.\n        entry: 'src/index.ts',\n        name: 'my-app',\n        fileName: 'index',\n        // Change this to the formats you want to support.\n        // Don't forgot to update your package.json as well.\n        formats: ['es', 'cjs']\n      },\n      rollupOptions: {\n        // External packages that should not be bundled into your library.\n        external: [\"'react', 'react-dom', 'react/jsx-runtime'\"]\n      }\n    },";
export declare const buildOptionObject: {
    lib: {
        entry: string;
        name: string;
        fileName: string;
        formats: string[];
    };
    rollupOptions: {
        external: string[];
    };
};
export declare const testOption = "test: {\n        globals: true,\n        cache: {\n          dir: '../node_modules/.vitest'\n        },\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n    },";
export declare const testOptionObject: {
    globals: boolean;
    cache: {
        dir: string;
    };
    environment: string;
    include: string[];
};
export declare const dtsPlugin = "dts({\n      entryRoot: 'src',\n      tsConfigFilePath: join(__dirname, 'tsconfig.lib.json'),\n      skipDiagnostics: true,\n    }),";
export declare const dtsImportLine = "import dts from 'vite-plugin-dts';\nimport { join } from 'path';";
export declare const pluginOption: string;
