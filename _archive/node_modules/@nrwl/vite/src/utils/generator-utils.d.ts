import { TargetConfiguration, Tree } from '@nrwl/devkit';
import { ViteConfigurationGeneratorSchema } from '../generators/configuration/schema';
export type Target = 'build' | 'serve' | 'test' | 'preview';
export type TargetFlags = Partial<Record<Target, boolean>>;
export type UserProvidedTargetName = Partial<Record<Target, string>>;
export type ValidFoundTargetName = Partial<Record<Target, string>>;
export declare function findExistingTargetsInProject(targets: {
    [targetName: string]: TargetConfiguration;
}, userProvidedTargets?: UserProvidedTargetName): {
    validFoundTargetName: ValidFoundTargetName;
    projectContainsUnsupportedExecutor: boolean;
    userProvidedTargetIsUnsupported: TargetFlags;
    alreadyHasNxViteTargets: TargetFlags;
};
export declare function addOrChangeTestTarget(tree: Tree, options: ViteConfigurationGeneratorSchema, target: string): void;
export declare function addOrChangeBuildTarget(tree: Tree, options: ViteConfigurationGeneratorSchema, target: string): void;
export declare function addOrChangeServeTarget(tree: Tree, options: ViteConfigurationGeneratorSchema, target: string): void;
/**
 * Adds a target for the preview server.
 *
 * @param tree
 * @param options
 * @param serveTarget An existing serve target.
 * @param previewTarget  The preview target to create.
 */
export declare function addPreviewTarget(tree: Tree, options: ViteConfigurationGeneratorSchema, serveTarget: string): void;
export declare function editTsConfig(tree: Tree, options: ViteConfigurationGeneratorSchema): void;
export declare function deleteWebpackConfig(tree: Tree, projectRoot: string, webpackConfigFilePath?: string): void;
export declare function moveAndEditIndexHtml(tree: Tree, options: ViteConfigurationGeneratorSchema, buildTarget: string): void;
export declare function createOrEditViteConfig(tree: Tree, options: ViteConfigurationGeneratorSchema, onlyVitest: boolean, projectAlreadyHasViteTargets?: TargetFlags): void;
export declare function normalizeViteConfigFilePathWithTree(tree: Tree, projectRoot: string, configFile?: string): string;
export declare function getViteConfigPathForProject(tree: Tree, projectName: string, target?: string): string;
export declare function handleUnsupportedUserProvidedTargets(userProvidedTargetIsUnsupported: TargetFlags, userProvidedTargetName: UserProvidedTargetName, validFoundTargetName: ValidFoundTargetName): Promise<void>;
export declare function handleUnknownExecutors(projectName: string): Promise<void>;
